# Sync updated PDFs to Cloud storage
name: Sync PDFs to Cloud Storage

on:
  push:
    branches: [ master ]
    paths:
      - '*.pdf'
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (true/false)'
        required: false
        default: 'false'

env:
  GCS_BUCKET: whitepaper-pdfs-91fa25b2
  CDN_URLMAP: whitepaper-urlmap

jobs:
  sync-pdfs:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: 'projects/347244006958/locations/global/workloadIdentityPools/github-pool/providers/github-actions-provider'
        service_account: 'whitepaper-github-actions@circles-production-1.iam.gserviceaccount.com'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Check GCS Bucket Access
      run: |
        gsutil ls gs://$GCS_BUCKET || {
          echo "‚ùå Bucket not accessible!" && exit 1
        }

    - name: Upload Latest PDF Only
      if: github.event.inputs.dry_run != 'true'
      run: |
        echo "üì§ Uploading latest PDF to gs://$GCS_BUCKET/"

        # Find the latest whitepaper PDF
        LATEST_PDF=$(ls -t ./Circles_Whitepaper_*.pdf 2>/dev/null | head -n1)
        if [ -n "$LATEST_PDF" ]; then
          echo "üìÑ Uploading latest PDF: $LATEST_PDF -> latest.pdf"
          gsutil cp "$LATEST_PDF" gs://$GCS_BUCKET/latest.pdf
          
          # Set content type and cache headers
          gsutil setmeta -h "Content-Type:application/pdf" gs://$GCS_BUCKET/latest.pdf
          gsutil setmeta -h "Cache-Control:public, max-age=3600" gs://$GCS_BUCKET/latest.pdf
        else
          echo "‚ùå No Circles_Whitepaper_*.pdf files found"
          exit 1
        fi

    - name: Invalidate CDN cache
      if: github.event.inputs.dry_run != 'true'
      run: |
        echo "üöÄ Invalidating CDN cache for all PDFs"
        gcloud compute url-maps invalidate-cdn-cache $CDN_URLMAP \
          --path="/*" \
          --async

    - name: Verify sync
      run: |
        echo "üìÑ Final list of files in GCS bucket:"
        gsutil ls -l gs://$GCS_BUCKET/

